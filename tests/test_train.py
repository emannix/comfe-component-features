import os

import pytest
from hydra.core.hydra_config import HydraConfig
from omegaconf import open_dict

from main import train
from tests.helpers.run_if import RunIf
from tests.helpers import helpers 
from tests.helpers import seetests

from pdb import set_trace as pb
from lightning.pytorch.callbacks import ModelCheckpoint
import numpy as np

from torch import tensor
import torch
nan = float('nan')


# python main.py +run=base.yaml +R=comfe +model/dataset=torchvision_flowers +model/networks=dinov2_vits_14  +debug=debug

# pytest -s tests/test_train.py::test_comfe_fast_dev_run_gpu
@RunIf(min_gpus=1)
def test_comfe_fast_dev_run_gpu(cfg_comfe_flowers):
    # prev_results_train = {'lr-AdamW/pg1': tensor(0.0005), 'lr-AdamW/pg1-momentum': tensor(0.9000), 'lr-AdamW/pg2': tensor(0.0005), 'lr-AdamW/pg2-momentum': tensor(0.9000), 'lr-AdamW/pg3': tensor(0.0005), 'lr-AdamW/pg3-momentum': tensor(0.9000), 'lr-AdamW/pg4': tensor(0.0005), 'lr-AdamW/pg4-momentum': tensor(0.9000), 'train/loss': tensor(13.3854), 'train/loss_step': tensor(13.3854), 'val/loss': tensor(11.6855), 'val/accuracy': tensor(0.), 'val/mean_class_accuracy': tensor(0.), 'val/aucroc': tensor(0.), 'val/average_precision_0': tensor(1.), 'val/average_precision_1': tensor(nan), 'val/average_precision_2': tensor(nan), 'val/average_precision_3': tensor(nan), 'val/average_precision_4': tensor(nan), 'val/average_precision_5': tensor(nan), 'val/average_precision_6': tensor(nan), 'val/average_precision_7': tensor(nan), 'val/average_precision_8': tensor(nan), 'val/average_precision_9': tensor(nan), 'val/average_precision_10': tensor(nan), 'val/average_precision_11': tensor(nan), 'val/average_precision_12': tensor(nan), 'val/average_precision_13': tensor(nan), 'val/average_precision_14': tensor(nan), 'val/average_precision_15': tensor(nan), 'val/average_precision_16': tensor(nan), 'val/average_precision_17': tensor(nan), 'val/average_precision_18': tensor(nan), 'val/average_precision_19': tensor(nan), 'val/average_precision_20': tensor(nan), 'val/average_precision_21': tensor(nan), 'val/average_precision_22': tensor(nan), 'val/average_precision_23': tensor(nan), 'val/average_precision_24': tensor(nan), 'val/average_precision_25': tensor(nan), 'val/average_precision_26': tensor(nan), 'val/average_precision_27': tensor(nan), 'val/average_precision_28': tensor(nan), 'val/average_precision_29': tensor(nan), 'val/average_precision_30': tensor(nan), 'val/average_precision_31': tensor(nan), 'val/average_precision_32': tensor(nan), 'val/average_precision_33': tensor(nan), 'val/average_precision_34': tensor(nan), 'val/average_precision_35': tensor(nan), 'val/average_precision_36': tensor(nan), 'val/average_precision_37': tensor(nan), 'val/average_precision_38': tensor(nan), 'val/average_precision_39': tensor(nan), 'val/average_precision_40': tensor(nan), 'val/average_precision_41': tensor(nan), 'val/average_precision_42': tensor(nan), 'val/average_precision_43': tensor(nan), 'val/average_precision_44': tensor(nan), 'val/average_precision_45': tensor(nan), 'val/average_precision_46': tensor(nan), 'val/average_precision_47': tensor(nan), 'val/average_precision_48': tensor(nan), 'val/average_precision_49': tensor(nan), 'val/average_precision_50': tensor(nan), 'val/average_precision_51': tensor(nan), 'val/average_precision_52': tensor(nan), 'val/average_precision_53': tensor(nan), 'val/average_precision_54': tensor(nan), 'val/average_precision_55': tensor(nan), 'val/average_precision_56': tensor(nan), 'val/average_precision_57': tensor(nan), 'val/average_precision_58': tensor(nan), 'val/average_precision_59': tensor(nan), 'val/average_precision_60': tensor(nan), 'val/average_precision_61': tensor(nan), 'val/average_precision_62': tensor(nan), 'val/average_precision_63': tensor(nan), 'val/average_precision_64': tensor(nan), 'val/average_precision_65': tensor(nan), 'val/average_precision_66': tensor(nan), 'val/average_precision_67': tensor(nan), 'val/average_precision_68': tensor(nan), 'val/average_precision_69': tensor(nan), 'val/average_precision_70': tensor(nan), 'val/average_precision_71': tensor(nan), 'val/average_precision_72': tensor(nan), 'val/average_precision_73': tensor(nan), 'val/average_precision_74': tensor(nan), 'val/average_precision_75': tensor(nan), 'val/average_precision_76': tensor(nan), 'val/average_precision_77': tensor(nan), 'val/average_precision_78': tensor(nan), 'val/average_precision_79': tensor(nan), 'val/average_precision_80': tensor(nan), 'val/average_precision_81': tensor(nan), 'val/average_precision_82': tensor(nan), 'val/average_precision_83': tensor(nan), 'val/average_precision_84': tensor(nan), 'val/average_precision_85': tensor(nan), 'val/average_precision_86': tensor(nan), 'val/average_precision_87': tensor(nan), 'val/average_precision_88': tensor(nan), 'val/average_precision_89': tensor(nan), 'val/average_precision_90': tensor(nan), 'val/average_precision_91': tensor(nan), 'val/average_precision_92': tensor(nan), 'val/average_precision_93': tensor(nan), 'val/average_precision_94': tensor(nan), 'val/average_precision_95': tensor(nan), 'val/average_precision_96': tensor(nan), 'val/average_precision_97': tensor(nan), 'val/average_precision_98': tensor(nan), 'val/average_precision_99': tensor(nan), 'val/average_precision_100': tensor(nan), 'val/average_precision_101': tensor(nan), 'val/loss_prob': tensor(7.2217), 'val/loss_constrast': tensor(0.), 'val/loss_patch_consistency': tensor(0.), 'val/loss_proto_memax': tensor(-2.8264), 'val/loss_class_contrast': tensor(0.), 'val/loss_proto_class_entropy': tensor(0.), 'val/loss_proto_prob': tensor(7.2902), 'train/loss_epoch': tensor(13.3854), 'train/accuracy': tensor(0.), 'train/mean_class_accuracy': tensor(0.), 'train/loss_prob': tensor(7.0351), 'train/loss_constrast': tensor(0.0792), 'train/loss_patch_consistency': tensor(1.5462), 'train/loss_proto_memax': tensor(-2.2701), 'train/loss_class_contrast': tensor(0.), 'train/loss_proto_class_entropy': tensor(0.), 'train/loss_proto_prob': tensor(6.9949), 'test/loss': tensor(12.0702), 'test/accuracy': tensor(0.), 'test/mean_class_accuracy': tensor(0.), 'test/aucroc': tensor(0.), 'test/average_precision_0': tensor(1.), 'test/average_precision_1': tensor(nan), 'test/average_precision_2': tensor(nan), 'test/average_precision_3': tensor(nan), 'test/average_precision_4': tensor(nan), 'test/average_precision_5': tensor(nan), 'test/average_precision_6': tensor(nan), 'test/average_precision_7': tensor(nan), 'test/average_precision_8': tensor(nan), 'test/average_precision_9': tensor(nan), 'test/average_precision_10': tensor(nan), 'test/average_precision_11': tensor(nan), 'test/average_precision_12': tensor(nan), 'test/average_precision_13': tensor(nan), 'test/average_precision_14': tensor(nan), 'test/average_precision_15': tensor(nan), 'test/average_precision_16': tensor(nan), 'test/average_precision_17': tensor(nan), 'test/average_precision_18': tensor(nan), 'test/average_precision_19': tensor(nan), 'test/average_precision_20': tensor(nan), 'test/average_precision_21': tensor(nan), 'test/average_precision_22': tensor(nan), 'test/average_precision_23': tensor(nan), 'test/average_precision_24': tensor(nan), 'test/average_precision_25': tensor(nan), 'test/average_precision_26': tensor(nan), 'test/average_precision_27': tensor(nan), 'test/average_precision_28': tensor(nan), 'test/average_precision_29': tensor(nan), 'test/average_precision_30': tensor(nan), 'test/average_precision_31': tensor(nan), 'test/average_precision_32': tensor(nan), 'test/average_precision_33': tensor(nan), 'test/average_precision_34': tensor(nan), 'test/average_precision_35': tensor(nan), 'test/average_precision_36': tensor(nan), 'test/average_precision_37': tensor(nan), 'test/average_precision_38': tensor(nan), 'test/average_precision_39': tensor(nan), 'test/average_precision_40': tensor(nan), 'test/average_precision_41': tensor(nan), 'test/average_precision_42': tensor(nan), 'test/average_precision_43': tensor(nan), 'test/average_precision_44': tensor(nan), 'test/average_precision_45': tensor(nan), 'test/average_precision_46': tensor(nan), 'test/average_precision_47': tensor(nan), 'test/average_precision_48': tensor(nan), 'test/average_precision_49': tensor(nan), 'test/average_precision_50': tensor(nan), 'test/average_precision_51': tensor(nan), 'test/average_precision_52': tensor(nan), 'test/average_precision_53': tensor(nan), 'test/average_precision_54': tensor(nan), 'test/average_precision_55': tensor(nan), 'test/average_precision_56': tensor(nan), 'test/average_precision_57': tensor(nan), 'test/average_precision_58': tensor(nan), 'test/average_precision_59': tensor(nan), 'test/average_precision_60': tensor(nan), 'test/average_precision_61': tensor(nan), 'test/average_precision_62': tensor(nan), 'test/average_precision_63': tensor(nan), 'test/average_precision_64': tensor(nan), 'test/average_precision_65': tensor(nan), 'test/average_precision_66': tensor(nan), 'test/average_precision_67': tensor(nan), 'test/average_precision_68': tensor(nan), 'test/average_precision_69': tensor(nan), 'test/average_precision_70': tensor(nan), 'test/average_precision_71': tensor(nan), 'test/average_precision_72': tensor(nan), 'test/average_precision_73': tensor(nan), 'test/average_precision_74': tensor(nan), 'test/average_precision_75': tensor(nan), 'test/average_precision_76': tensor(nan), 'test/average_precision_77': tensor(nan), 'test/average_precision_78': tensor(nan), 'test/average_precision_79': tensor(nan), 'test/average_precision_80': tensor(nan), 'test/average_precision_81': tensor(nan), 'test/average_precision_82': tensor(nan), 'test/average_precision_83': tensor(nan), 'test/average_precision_84': tensor(nan), 'test/average_precision_85': tensor(nan), 'test/average_precision_86': tensor(nan), 'test/average_precision_87': tensor(nan), 'test/average_precision_88': tensor(nan), 'test/average_precision_89': tensor(nan), 'test/average_precision_90': tensor(nan), 'test/average_precision_91': tensor(nan), 'test/average_precision_92': tensor(nan), 'test/average_precision_93': tensor(nan), 'test/average_precision_94': tensor(nan), 'test/average_precision_95': tensor(nan), 'test/average_precision_96': tensor(nan), 'test/average_precision_97': tensor(nan), 'test/average_precision_98': tensor(nan), 'test/average_precision_99': tensor(nan), 'test/average_precision_100': tensor(nan), 'test/average_precision_101': tensor(nan), 'test/loss_prob': tensor(7.0414), 'test/loss_constrast': tensor(0.), 'test/loss_patch_consistency': tensor(0.), 'test/loss_proto_memax': tensor(-1.9006), 'test/loss_class_contrast': tensor(0.), 'test/loss_proto_class_entropy': tensor(0.), 'test/loss_proto_prob': tensor(6.9294)}
    prev_results_train = {'lr-AdamW/pg1': tensor(0.0005), 'lr-AdamW/pg1-momentum': tensor(0.9000), 'lr-AdamW/pg2': tensor(0.0005), 'lr-AdamW/pg2-momentum': tensor(0.9000), 'lr-AdamW/pg3': tensor(0.0005), 'lr-AdamW/pg3-momentum': tensor(0.9000), 'lr-AdamW/pg4': tensor(0.0005), 'lr-AdamW/pg4-momentum': tensor(0.9000), 'train/loss': tensor(13.3854), 'train/loss_step': tensor(13.3854), 'val/loss': tensor(11.6855), 'val/accuracy': tensor(0.), 'val/mean_class_accuracy': tensor(0.), 'val/aucroc': tensor(0.), 'val/average_precision_0': tensor(1.), 'val/average_precision_1': tensor(nan), 'val/average_precision_2': tensor(nan), 'val/average_precision_3': tensor(nan), 'val/average_precision_4': tensor(nan), 'val/average_precision_5': tensor(nan), 'val/average_precision_6': tensor(nan), 'val/average_precision_7': tensor(nan), 'val/average_precision_8': tensor(nan), 'val/average_precision_9': tensor(nan), 'val/average_precision_10': tensor(nan), 'val/average_precision_11': tensor(nan), 'val/average_precision_12': tensor(nan), 'val/average_precision_13': tensor(nan), 'val/average_precision_14': tensor(nan), 'val/average_precision_15': tensor(nan), 'val/average_precision_16': tensor(nan), 'val/average_precision_17': tensor(nan), 'val/average_precision_18': tensor(nan), 'val/average_precision_19': tensor(nan), 'val/average_precision_20': tensor(nan), 'val/average_precision_21': tensor(nan), 'val/average_precision_22': tensor(nan), 'val/average_precision_23': tensor(nan), 'val/average_precision_24': tensor(nan), 'val/average_precision_25': tensor(nan), 'val/average_precision_26': tensor(nan), 'val/average_precision_27': tensor(nan), 'val/average_precision_28': tensor(nan), 'val/average_precision_29': tensor(nan), 'val/average_precision_30': tensor(nan), 'val/average_precision_31': tensor(nan), 'val/average_precision_32': tensor(nan), 'val/average_precision_33': tensor(nan), 'val/average_precision_34': tensor(nan), 'val/average_precision_35': tensor(nan), 'val/average_precision_36': tensor(nan), 'val/average_precision_37': tensor(nan), 'val/average_precision_38': tensor(nan), 'val/average_precision_39': tensor(nan), 'val/average_precision_40': tensor(nan), 'val/average_precision_41': tensor(nan), 'val/average_precision_42': tensor(nan), 'val/average_precision_43': tensor(nan), 'val/average_precision_44': tensor(nan), 'val/average_precision_45': tensor(nan), 'val/average_precision_46': tensor(nan), 'val/average_precision_47': tensor(nan), 'val/average_precision_48': tensor(nan), 'val/average_precision_49': tensor(nan), 'val/average_precision_50': tensor(nan), 'val/average_precision_51': tensor(nan), 'val/average_precision_52': tensor(nan), 'val/average_precision_53': tensor(nan), 'val/average_precision_54': tensor(nan), 'val/average_precision_55': tensor(nan), 'val/average_precision_56': tensor(nan), 'val/average_precision_57': tensor(nan), 'val/average_precision_58': tensor(nan), 'val/average_precision_59': tensor(nan), 'val/average_precision_60': tensor(nan), 'val/average_precision_61': tensor(nan), 'val/average_precision_62': tensor(nan), 'val/average_precision_63': tensor(nan), 'val/average_precision_64': tensor(nan), 'val/average_precision_65': tensor(nan), 'val/average_precision_66': tensor(nan), 'val/average_precision_67': tensor(nan), 'val/average_precision_68': tensor(nan), 'val/average_precision_69': tensor(nan), 'val/average_precision_70': tensor(nan), 'val/average_precision_71': tensor(nan), 'val/average_precision_72': tensor(nan), 'val/average_precision_73': tensor(nan), 'val/average_precision_74': tensor(nan), 'val/average_precision_75': tensor(nan), 'val/average_precision_76': tensor(nan), 'val/average_precision_77': tensor(nan), 'val/average_precision_78': tensor(nan), 'val/average_precision_79': tensor(nan), 'val/average_precision_80': tensor(nan), 'val/average_precision_81': tensor(nan), 'val/average_precision_82': tensor(nan), 'val/average_precision_83': tensor(nan), 'val/average_precision_84': tensor(nan), 'val/average_precision_85': tensor(nan), 'val/average_precision_86': tensor(nan), 'val/average_precision_87': tensor(nan), 'val/average_precision_88': tensor(nan), 'val/average_precision_89': tensor(nan), 'val/average_precision_90': tensor(nan), 'val/average_precision_91': tensor(nan), 'val/average_precision_92': tensor(nan), 'val/average_precision_93': tensor(nan), 'val/average_precision_94': tensor(nan), 'val/average_precision_95': tensor(nan), 'val/average_precision_96': tensor(nan), 'val/average_precision_97': tensor(nan), 'val/average_precision_98': tensor(nan), 'val/average_precision_99': tensor(nan), 'val/average_precision_100': tensor(nan), 'val/average_precision_101': tensor(nan), 'val/loss_pz': tensor(-2.8264), 'val/loss_pyz': tensor(7.2217), 'val/loss_pyp': tensor(7.2902), 'val/loss_patch_consistency': tensor(0.), 'val/loss_image_contrast': tensor(0.), 'val/loss_class_contrast': tensor(0.), 'train/loss_epoch': tensor(13.3854), 'train/accuracy': tensor(0.), 'train/mean_class_accuracy': tensor(0.), 'train/loss_pz': tensor(-2.2701), 'train/loss_pyz': tensor(7.0351), 'train/loss_pyp': tensor(6.9949), 'train/loss_patch_consistency': tensor(1.5462), 'train/loss_image_contrast': tensor(0.0792), 'train/loss_class_contrast': tensor(0.), 'test/loss': tensor(12.0702), 'test/accuracy': tensor(0.), 'test/mean_class_accuracy': tensor(0.), 'test/aucroc': tensor(0.), 'test/average_precision_0': tensor(1.), 'test/average_precision_1': tensor(nan), 'test/average_precision_2': tensor(nan), 'test/average_precision_3': tensor(nan), 'test/average_precision_4': tensor(nan), 'test/average_precision_5': tensor(nan), 'test/average_precision_6': tensor(nan), 'test/average_precision_7': tensor(nan), 'test/average_precision_8': tensor(nan), 'test/average_precision_9': tensor(nan), 'test/average_precision_10': tensor(nan), 'test/average_precision_11': tensor(nan), 'test/average_precision_12': tensor(nan), 'test/average_precision_13': tensor(nan), 'test/average_precision_14': tensor(nan), 'test/average_precision_15': tensor(nan), 'test/average_precision_16': tensor(nan), 'test/average_precision_17': tensor(nan), 'test/average_precision_18': tensor(nan), 'test/average_precision_19': tensor(nan), 'test/average_precision_20': tensor(nan), 'test/average_precision_21': tensor(nan), 'test/average_precision_22': tensor(nan), 'test/average_precision_23': tensor(nan), 'test/average_precision_24': tensor(nan), 'test/average_precision_25': tensor(nan), 'test/average_precision_26': tensor(nan), 'test/average_precision_27': tensor(nan), 'test/average_precision_28': tensor(nan), 'test/average_precision_29': tensor(nan), 'test/average_precision_30': tensor(nan), 'test/average_precision_31': tensor(nan), 'test/average_precision_32': tensor(nan), 'test/average_precision_33': tensor(nan), 'test/average_precision_34': tensor(nan), 'test/average_precision_35': tensor(nan), 'test/average_precision_36': tensor(nan), 'test/average_precision_37': tensor(nan), 'test/average_precision_38': tensor(nan), 'test/average_precision_39': tensor(nan), 'test/average_precision_40': tensor(nan), 'test/average_precision_41': tensor(nan), 'test/average_precision_42': tensor(nan), 'test/average_precision_43': tensor(nan), 'test/average_precision_44': tensor(nan), 'test/average_precision_45': tensor(nan), 'test/average_precision_46': tensor(nan), 'test/average_precision_47': tensor(nan), 'test/average_precision_48': tensor(nan), 'test/average_precision_49': tensor(nan), 'test/average_precision_50': tensor(nan), 'test/average_precision_51': tensor(nan), 'test/average_precision_52': tensor(nan), 'test/average_precision_53': tensor(nan), 'test/average_precision_54': tensor(nan), 'test/average_precision_55': tensor(nan), 'test/average_precision_56': tensor(nan), 'test/average_precision_57': tensor(nan), 'test/average_precision_58': tensor(nan), 'test/average_precision_59': tensor(nan), 'test/average_precision_60': tensor(nan), 'test/average_precision_61': tensor(nan), 'test/average_precision_62': tensor(nan), 'test/average_precision_63': tensor(nan), 'test/average_precision_64': tensor(nan), 'test/average_precision_65': tensor(nan), 'test/average_precision_66': tensor(nan), 'test/average_precision_67': tensor(nan), 'test/average_precision_68': tensor(nan), 'test/average_precision_69': tensor(nan), 'test/average_precision_70': tensor(nan), 'test/average_precision_71': tensor(nan), 'test/average_precision_72': tensor(nan), 'test/average_precision_73': tensor(nan), 'test/average_precision_74': tensor(nan), 'test/average_precision_75': tensor(nan), 'test/average_precision_76': tensor(nan), 'test/average_precision_77': tensor(nan), 'test/average_precision_78': tensor(nan), 'test/average_precision_79': tensor(nan), 'test/average_precision_80': tensor(nan), 'test/average_precision_81': tensor(nan), 'test/average_precision_82': tensor(nan), 'test/average_precision_83': tensor(nan), 'test/average_precision_84': tensor(nan), 'test/average_precision_85': tensor(nan), 'test/average_precision_86': tensor(nan), 'test/average_precision_87': tensor(nan), 'test/average_precision_88': tensor(nan), 'test/average_precision_89': tensor(nan), 'test/average_precision_90': tensor(nan), 'test/average_precision_91': tensor(nan), 'test/average_precision_92': tensor(nan), 'test/average_precision_93': tensor(nan), 'test/average_precision_94': tensor(nan), 'test/average_precision_95': tensor(nan), 'test/average_precision_96': tensor(nan), 'test/average_precision_97': tensor(nan), 'test/average_precision_98': tensor(nan), 'test/average_precision_99': tensor(nan), 'test/average_precision_100': tensor(nan), 'test/average_precision_101': tensor(nan), 'test/loss_pz': tensor(-1.9006), 'test/loss_pyz': tensor(7.0414), 'test/loss_pyp': tensor(6.9294), 'test/loss_patch_consistency': tensor(0.), 'test/loss_image_contrast': tensor(0.), 'test/loss_class_contrast': tensor(0.)}
    seetests.pretrain_eval_finetune_test(cfg_comfe_flowers, prev_results_train, accelerator='gpu', check_keys_train=False)


# python main.py +run=base.yaml +R=comfe +model/dataset=torchvision_flowers +model/networks=dinov2_vits_14  seed=1
# python main.py +run=base.yaml +R=comfe-view +model/dataset=torchvision_flowers +model/networks=dinov2_vits_14  +debug=debug



